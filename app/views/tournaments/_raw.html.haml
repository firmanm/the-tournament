= stylesheet_link_tag "https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css"
= stylesheet_link_tag "https://cdn.rawgit.com/lafeber/world-flags-sprite/9a8b5ea6/stylesheets/flags16.css"

:css
  .bracket {
    font-family: 'Lucida Grande','Hiragino Kaku Gothic ProN', Meiryo, sans-serif;
    font-size: 14px;
    color: #333;
    display: flex;
    flex-wrap: nowrap;
    position: relative;
    overflow-x: scroll;
    overflow-y: scroll;
    min-height: 220px;
  }
  .block {
    display: flex;
  }
  .round {
    display: flex;
    flex-direction: column;
  }

  .match {
    position: relative;
    display: flex;
    flex-grow: 1;
    cursor: pointer;
    overflow: visible;
  }
  .right.block .match { flex-direction: row-reverse; }
  .match:nth-child(even) { margin-top: -2px; }

  .teamContainer {
    margin: auto 0;
    padding: 7px 0;
  }
  .team {
    display: flex;
    align-items: center;
    background-color: #EEE;
    position: relative;
  }
  .team:first-child {
    margin-bottom: 1px;
  }
  .team:last-child {
    margin-top: 1px;
  }
  .match:not(.final):not(.consolation) .team.loser:not(.highlight) {
    opacity: 0.5;
  }

  .name {
    width: #{tournament.name_width.present? ? tournament.name_width : 100}px;
    padding-left: 5px;
    overflow: hidden;
  }
  .score {
    width: #{tournament.score_width.present? ? tournament.score_width : 40}px;
    text-align: center;
    background-color: rgba(255,255,255,0.4);
  }
  .name, .score {
    height: 25px;
    line-height: 25px;
  }
  .team.winner .score { color: #060; }
  .team.loser .score { color: #900; }


  /* z-index */
  .match.highlightSecond { z-index: 100; }
  .match.highlightFirst  { z-index: 101; }
  .match.highlight   { z-index: 102; }
  .match:hover { z-index: 103; }


  /* 勝ち上がり線 */
  .lineContainer {
    display: flex;
    flex-direction: column;
  }
  .lineContainer > div {
    display: flex;
    flex-grow: 1;
  }
  .lineContainer > div > div {
    width: 20px;
  }
  .left.block .final.round .lineContainer { display: none; }

  /* 左山 */
  /* 奇数試合 */
  .left.block .match:nth-child(odd) .lineContainer > div:last-child > div:first-child {
    border-top: 2px solid #999;
  }
  .left.block .match:nth-child(odd) .lineContainer > div:last-child > div:first-child {
    border-right: 2px solid #999;
  }
  .left.block .match:nth-child(odd) .lineContainer > div:last-child > div:last-child {
    border-bottom: 2px solid #999;
  }

  /* 偶数試合 */
  .left.block .match:nth-child(even) .lineContainer > div:first-child > div:first-child {
    border-bottom: 2px solid #999;
  }
  .left.block .match:nth-child(even) .lineContainer > div:first-child > div:first-child {
    border-right: 2px solid #999;
  }
  .left.block .match:nth-child(even) .lineContainer > div:first-child > div:last-child {
    border-top: 2px solid #999;
  }

  /*  右山 */
  /* 奇数試合 */
  .right.block .match:nth-child(odd) .lineContainer > div:last-child > div:last-child {
    border-top: 2px solid #999;
  }
  .right.block .match:nth-child(odd) .lineContainer > div:last-child > div:first-child {
    border-right: 2px solid #999;
  }
  .right.block .match:nth-child(odd) .lineContainer > div:last-child > div:first-child {
    border-bottom: 2px solid #999;
  }

  /* 偶数試合 */
  .right.block .match:nth-child(even) .lineContainer > div:first-child > div:last-child {
    border-bottom: 2px solid #999;
  }
  .right.block .match:nth-child(even) .lineContainer > div:first-child > div:first-child {
    border-right: 2px solid #999;
  }
  .right.block .match:nth-child(even) .lineContainer > div:first-child > div:first-child {
    border-top: 2px solid #999;
  }

  /* 中山 */
  /* 奇数試合 */
  .left.block .round:last-child .match:nth-child(odd) .lineContainer > div:first-child > div,
  .right.block .round:first-child .match:nth-child(odd) .lineContainer > div:first-child > div {
    border-bottom: 2px solid #999;
  }
  .left.block .round:last-child .match:nth-child(odd) .lineContainer > div:last-child > div,
  .right.block .round:first-child .match:nth-child(odd) .lineContainer > div:last-child > div {
    border: none;
  }
  .center.block .lineContainer {height: 50px; }
  .center.block .lineContainer > div > div { width: 50%; }
  .center.block .lineContainer { visibility: hidden; }

  .right.block .round:first-child:not(.final) .match .lineContainer,
  .left.block .round:last-child:not(.final) .match .lineContainer {
    display: none;
  }
  .left.block .round:last-child:not(.final) .match:before,
  .right.block .round:first-child:not(.final) .match:before {
    content: '';
    display: block;
    position: absolute;
    bottom: calc(50% - 1px);
    width: calc(50% + 1px);
    height: 50px;
    border-bottom: 2px solid #999;
  }
  .left.block .round:last-child:not(.final) .match:before {
    right: calc(-50% - 1px);
    border-right: 2px solid #999;
  }
  .right.block .round:first-child:not(.final) .match:before {
    left: calc(-50% - 1px);
    border-left: 2px solid #999;
  }


  /* 優勝/準優勝 */
  .match.highlightFirst .team.winner, .final.round .final.match .team.winner { background-color: #DA0; }
  .match.highlightSecond .team.winner, .final.round .final.match .team.loser { background-color: #CCC; }

  .right.block .round:first-child:not(.final) .match.highlightFirst:before,
  .left.block .round:last-child:not(.final) .match.highlightFirst:before,
  .right.block .match:nth-child(n).highlightFirst .lineContainer > div > div:nth-child(n),
  .left.block .match:nth-child(n).highlightFirst .lineContainer > div > div:nth-child(n) {
    border-color: #DA0;
   }
  .right.block .round:first-child:not(.final) .match.highlightSecond:before,
  .left.block .round:last-child:not(.final) .match.highlightSecond:before,
  .right.block .match:nth-child(n).highlightSecond .lineContainer > div > div:nth-child(n),
  .left.block .match:nth-child(n).highlightSecond .lineContainer > div > div:nth-child(n) {
    border-color: #CCC;
   }

  .final.round { margin: auto 0; }
  .final.match { flex-grow: unset; }


  /* 両山対応 */
  .center.block {
    z-index: 150;
  }
  .center.block .final.round { margin: 0; }
  .center.block .match .teamContainer {
    margin: 0;
    padding: 0;
  }
  .center.block .final.match {
    flex-grow: 1;
    flex-direction: column;
    justify-content: flex-end;
    margin-bottom: -2px;
  }
  .center.block .consolation.match {
    position: relative;
    top: inherit;
    margin-top: inherit;
    flex-direction: column-reverse;
    justify-content: flex-end;
  }


  /* 順位表示 */
  .final.match .team.winner:before, .final.match .team.loser:before,
  .consolation.match .team.winner:before, .consolation.match .team.loser:before {
    content: '';
    position: absolute;
    top: 6px;
    right: -5px;
    width: 0;
    height: 0;
    border-top: 5px solid transparent;
    border-left: 0;
    border-right: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-right-color: #DA0;
  }
  .final.match .team.winner:after, .final.match .team.loser:after,
  .consolation.match .team.winner:after, .consolation.match .team.loser:after {
    display: block;
    position: absolute;
    height: 22px;
    line-height: 22px;
    width: 30px;
    right: -35px;
    text-align: center;
    font-size: 11px;
  }

  /* 優勝 */
  .final.match .team.winner:after {
    content: '1st';
    background-color: #DA0;
    color: #960;
  }
  .final.match .team.winner:before { border-right-color: #DA0; }

  /* 準優勝 */
  .final.match .team.loser:after {
    content: '2nd';
    background-color: #CCC;
    color: #333;
  }
  .final.match .team.loser:before { border-right-color: #CCC; }

  /* ３位 */
  .consolation.match .team.winner:after {
    content: '3rd';
    background-color: #963;
    color: #D95;
  }
  .consolation.match .team.winner:before { border-right-color: #963; }

  /* 4位 */
  .consolation.match .team.loser:after {
    content: '4th';
    background-color: #678;
    color: #CCD;
  }
  .consolation.match .team.loser:before { border-right-color: #678; }


  /* チームハイライト */
  .team.highlight { background-color: #3C0 !important; }
  .match.highlight .lineContainer > div > div, .match.highlight:before {
     border-color: #3C0 !important;
   }


  /* ポップアップ表示 */
  .match.selected { z-index: 300; }
  .match.selected:after {
    display: block;
    content: '';
    background-color: rgba(255,255,255,0.7);
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    cursor: auto;
  }

  .popupContainer {
    display: none;
    position: absolute;
    top: 50%;
    left: 10px;
    z-index: 1;
    width: 400px;
    margin-right: 30px;
    margin-bottom: 30px;
    padding: 25px 0;
    border-radius: 5px;
    background-color: rgba(0,0,0,0.9);
    color: #fff;
    cursor: auto;
  }
  .match.selected .popupContainer {
    display: block;
  }

  .popupContainer h3 {
    font-size: 14px;
    font-weight: lighter;
    text-align: center;
    margin-top: 0;
  }
  .popupContainer .popupTeamContainer {
    display: flex;
    justify-content: space-between;
    text-align: center;
    margin: 35px 5%;
  }
  .popupName, .popupScore {
    padding: 10px;
  }
  .popupName .profile {
    width: 100px;
    max-width: 90%;
    height: 100px;
    margin: auto;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    margin-bottom: 15px;
  }
  .popupTeamContainer .popupTeam {
    width: 45%;
    border: 1px solid #EFEFEF;
    padding: 20px 0;
    position: relative;
  }
  .popupTeam.winner {
    border: 2px solid #DA0;
    background-color: rgba(221,170,0,0.3);
  }
  .popupTeam.loser {
    border: 2px solid #CCC;
    background-color: rgba(204,204,204,0.3);
  }
  .popupComment {
    margin: 0 5%;
    word-break: break-all;
  }
  .popupSpacer {
    display: flex;
    align-items: center;
  }

  .popupTeam:before {
    position: absolute;
    top: -20px;
    left: 0;
    width: 100%;
    text-align: center;
    font-weight: bold;
  }
  .popupTeam.winner:before {
    content: 'WIN';
    color: #DA0;
  }
  .popupTeam.loser:before {
    content: 'LOSE';
    color: #AAA;
  }


  /* ３位決定戦 */
  .skipConsolation .consolation { visibility: hidden; }

  .consolation.match {
    position: absolute;
    top: 50%;
    margin-top: 50px;
  }


- skip_consolation = (tournament.consolation_round) ? '' : 'skipConsolation'
.bracket{class: skip_consolation}
  - if !tournament.double_mountain
    .block.left
      - for round_num in 1..tournament.round_num
        - round  = tournament.results[round_num - 1]
        - round_class = 'final' if round_num == tournament.round_num
        .round{class: round_class}
          - for match_num in 1..(round.count)
            = render partial: "tournaments/match", locals: { tournament: tournament, round_num: round_num, match_num: match_num }

  - else
    .block.left
      - for round_num in 1..(tournament.round_num-1)
        - round  = tournament.results[round_num - 1]
        .round
          - for match_num in 1..(round.count.quo(2))
            = render partial: "tournaments/match", locals: { tournament: tournament, round_num: round_num, match_num: match_num }

    .block.center
      - round_num = tournament.round_num
      - round = tournament.results[round_num - 1]
      .final.round
        - for match_num in 1..2
          = render partial: "tournaments/match", locals: { tournament: tournament, round_num: round_num, match_num: match_num }

    .block.right
      - (tournament.round_num - 1).downto(1) do |round_num|
        - round  = tournament.results[round_num - 1]
        .round
          - for match_num in (round.count/2+1)..(round.count)
            = render partial: "tournaments/match", locals: { tournament: tournament, round_num: round_num, match_num: match_num }


:javascript
  (function() {
    /* ハイライト */
    var teams = document.getElementsByClassName('team');
    for (var i = 0; i < teams.length; i++) {
      teams[i].addEventListener('mouseover', function(e){
        this.classList.add("highlight");  // idがないブロック(TBDなど)も一応ハイライトされるように

        var teamid = this.dataset.teamid;
        var selectedTeams = document.querySelectorAll('[data-teamid="'+ teamid +'"]');
        for (var j = 0; j < selectedTeams.length; j++) {
          selectedTeams[j].classList.add("highlight");

          // winnerの場合はmatchにもhighlightつけてlineContainerをハイライト
          if(selectedTeams[j].classList.contains('winner')) {
            var match = selectedTeams[j].parentNode.parentNode;
            match.classList.add("highlight");
          }
        }
      }, false);

      teams[i].addEventListener('mouseout', function(){
        for (var k = 0; k < teams.length; k++) {
          teams[k].classList.remove("highlight");

          var match = teams[k].parentNode.parentNode;
          match.classList.remove("highlight");
        }
      }, false);
    }
  })();
