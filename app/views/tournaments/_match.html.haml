- round = tournament.results[round_num - 1]
- match = round[match_num-1]
- if round_num == tournament.round_num
  - match_class = (match_num==1) ? 'final' : 'consolation'
- else
  - if match_num == tournament.highlight_match(round_num, 1)
    - match_class = 'highlightFirst'
  - elsif match_num == tournament.highlight_match(round_num, 2)
    - match_class = 'highlightSecond'

.match{class: match_class}(onclick="this.classList.toggle('selected')")
  .teamContainer
    - for team_index in 0..1 do
      - team_class = ''
      - if !match['winner'].nil?
        - team_class = (match['winner']==team_index) ? 'winner' : 'loser'
      - team = tournament.winner_team(round_num, match_num, team_index)
      .team{class: team_class, 'data-teamid': team['id']}
        .name
          - if team['flag'].present?
            %span.f16
              %span.flag{class: team['flag'].downcase}
          = team['name']
        .score= (match['score'][team_index]).present? ? match['score'][team_index] : '--'
  .lineContainer
    %div
      %div
      %div
    %div
      %div
      %div

  .popupContainer
    .popupContent(onclick="event.stopPropagation();")
      %h3.popupTitle= tournament.match_name({round: round_num, game: match_num})
      .popupTeamContainer
        - for team_index in 0..1 do
          - if !match['winner'].nil?
            - team_class = (match['winner']==team_index) ? 'winner' : 'loser'
          - team = tournament.winner_team(round_num, match_num, team_index)
          .popupTeam{class: team_class}
            .popupName
              - if team['flag'].present?
                %span.f16
                  %span.flag{class: team['flag'].downcase}
              = team['name']
            .popupScore
              = (match['score'][team_index]).present? ? match['score'][team_index] : '--'
          - if team_index == 0
            .popupSpacer
              \-
      .popupComment
        = tournament.text_url_to_link( simple_format(h(match['comment'])) ).html_safe
